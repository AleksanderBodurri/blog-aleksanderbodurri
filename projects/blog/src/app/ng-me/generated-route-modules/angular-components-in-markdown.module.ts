// THIS FILE WAS GENERATED BY TOOLING. DO NOT EDIT THIS FILE DIRECTLY.

import { Component, NgModule, OnInit, OnDestroy } from "@angular/core";
import { RouterModule } from "@angular/router";
import { CommonModule } from "@angular/common";
import { Meta } from '@angular/platform-browser';

import { CodeBlockComponent } from '../components-for-generated-routes/code-block/code-block.component';
import { CodeTabsComponent } from '../components-for-generated-routes/code-tabs/code-tabs.component';
import { HelloWorldComponent } from '../components-for-generated-routes/hello-world/hello-world.component'


@Component({
selector: 'ng-me-angular-components-in-markdown',
template: `
  <h1>Angular Components in Markdown</h1>
<code-tabs>
  <ol code-headers>
    <li>index.md (this page)</li>
    <li>code-tabs.component.ts</li>
    <li>code-block.component.ts</li>
    <li>hello-world.component.ts</li>
    <li>Preview</li>
  </ol>
  <ol tabs>
    <li>
      <code-block
        slug="angular-components-in-markdown"
        src="page-as-markdown.md"
      >
      </code-block>
    </li>
    <li>
      <code-block
        slug="angular-components-in-markdown"
        lazySrc="code-tabs-component.md"
      >
      </code-block>
    </li>
    <li>
      <code-block
        slug="angular-components-in-markdown"
        lazySrc="code-block-component.md"
      >
      </code-block>
    </li>
    <li>
      <code-block
        slug="angular-components-in-markdown"
        lazySrc="hello-world-component.md"
      >
      </code-block>
    </li>
    <li>
      <hello-world> Some text to project </hello-world>
    </li>
  </ol>
</code-tabs>

`,
styles: [`
`]
})
export class AngularComponentsInMarkdownPageComponent implements OnInit, OnDestroy {
constructor(
  private meta: Meta
){}

ngOnInit(): void {
  this.meta.addTag({ property: 'og:title', content: 'Angular Components in Markdown' });
  this.meta.addTag({ property: 'og:type', content: 'article' });

  if (true) {
    this.meta.addTag({ property: 'og:url', content: 'https://aleksanderbodurri.com/posts/angular-components-in-markdown' });
  }

  if (true) {
    this.meta.addTag({ property: 'og:image', content: 'http://aleksanderbodurri.com/assets/me.png' });
  }

  if (true) {
    this.meta.addTag({ property: 'og:image:secure_url', content: 'http://aleksanderbodurri.com/assets/me.png' });
  }

  if (true) {
    this.meta.addTag({ name: 'description', content: 'Examples of some of the Angular components this blog uses in Markdown files.' });
  }

  if (true) {
    this.meta.addTag({ name: 'keywords', content: 'Angular,angular,nghost,_nghost,Markdown,md' });
  }
}

ngOnDestroy(): void {
  this.meta.removeTag('property="og:title"');
  this.meta.removeTag('property="og:type"');
  this.meta.removeTag('property="og:url"');
  this.meta.removeTag('property="og:image"');
  this.meta.removeTag('property="og:image:secure_url"');

  if (true) {
    this.meta.removeTag('name=description');
  }
  
  if (true) {
    this.meta.removeTag('name=keywords');
  } 
}
}


@NgModule({
imports: [
  CommonModule,
  RouterModule.forChild([
    {
      path: '',
      pathMatch: 'full',
      component: AngularComponentsInMarkdownPageComponent,
    },
  ]),
  CodeBlockComponent,
    CodeTabsComponent,
    HelloWorldComponent

],
declarations: [
  AngularComponentsInMarkdownPageComponent,
],
bootstrap: [],
})
export class LazyModule {}
  